/*!
angular-xeditable - 0.1.8
Edit-in-place for angular.js
Build date: 2014-01-10 
*/
angular.module("xeditable",[]).value("editableOptions",{theme:"default",buttons:"right",blurElem:"cancel",blurForm:"ignore",activate:"focus"});angular.module("xeditable").directive("editableBsdate",["editableDirectiveFactory",function(n){return n({directiveName:"editableBsdate",inputTpl:'<input type="text">'})}]);angular.module("xeditable").directive("editableBstime",["editableDirectiveFactory",function(n){return n({directiveName:"editableBstime",inputTpl:"<timepicker><\/timepicker>",render:function(){this.parent.render.call(this);var n=angular.element('<div class="well well-small" style="display:inline-block;"><\/div>');n.attr("ng-model",this.inputEl.attr("ng-model"));this.inputEl.removeAttr("ng-model");this.attrs.eNgChange&&(n.attr("ng-change",this.inputEl.attr("ng-change")),this.inputEl.removeAttr("ng-change"));this.inputEl.wrap(n)}})}]);angular.module("xeditable").directive("editableCheckbox",["editableDirectiveFactory",function(n){return n({directiveName:"editableCheckbox",inputTpl:'<input type="checkbox">',render:function(){this.parent.render.call(this);this.attrs.eTitle&&(this.inputEl.wrap("<label><\/label>"),this.inputEl.after(angular.element("<span><\/span>").text(this.attrs.eTitle)))},autosubmit:function(){var n=this;n.inputEl.bind("change",function(){setTimeout(function(){n.scope.$apply(function(){n.scope.$form.$submit()})},500)})}})}]);angular.module("xeditable").directive("editableChecklist",["editableDirectiveFactory","editableNgOptionsParser",function(n,t){return n({directiveName:"editableChecklist",inputTpl:"<span><\/span>",useCopy:!0,render:function(){this.parent.render.call(this);var n=t(this.attrs.eNgOptions),i='<label ng-repeat="'+n.ngRepeat+'"><input type="checkbox" checklist-model="$parent.$data" checklist-value="'+n.locals.valueFn+'"><span ng-bind="'+n.locals.displayFn+'"><\/span><\/label>';this.inputEl.removeAttr("ng-model");this.inputEl.removeAttr("ng-options");this.inputEl.html(i)}})}]),function(){var n="text|email|tel|number|url|search|color|date|datetime|time|month|week".split("|");angular.forEach(n,function(n){var t="editable"+n.charAt(0).toUpperCase()+n.slice(1);angular.module("xeditable").directive(t,["editableDirectiveFactory",function(i){return i({directiveName:t,inputTpl:'<input type="'+n+'">',autosubmit:function(){var n=this;n.inputEl.bind("change",function(){n.scope.$apply(function(){n.scope.$form.$submit()})})}})}])});angular.module("xeditable").directive("editableRange",["editableDirectiveFactory",function(n){return n({directiveName:"editableRange",inputTpl:'<input type="range" id="range" name="range">',render:function(){this.parent.render.call(this);this.inputEl.after("<output>{{$data}}<\/output>")}})}])}();angular.module("xeditable").directive("editableRadiolist",["editableDirectiveFactory","editableNgOptionsParser",function(n,t){return n({directiveName:"editableRadiolist",inputTpl:"<span><\/span>",render:function(){this.parent.render.call(this);var n=t(this.attrs.eNgOptions),i='<label ng-repeat="'+n.ngRepeat+'"><input type="radio" ng-model="$parent.$data" value="{{'+n.locals.valueFn+'}}"><span ng-bind="'+n.locals.displayFn+'"><\/span><\/label>';this.inputEl.removeAttr("ng-model");this.inputEl.removeAttr("ng-options");this.inputEl.html(i)},autosubmit:function(){var n=this;n.inputEl.bind("change",function(){setTimeout(function(){n.scope.$apply(function(){n.scope.$form.$submit()})},500)})}})}]);angular.module("xeditable").directive("editableSelect",["editableDirectiveFactory",function(n){return n({directiveName:"editableSelect",inputTpl:"<select><\/select>",autosubmit:function(){var n=this;n.inputEl.bind("change",function(){n.scope.$apply(function(){n.scope.$form.$submit()})})}})}]);angular.module("xeditable").directive("editableTextarea",["editableDirectiveFactory",function(n){return n({directiveName:"editableTextarea",inputTpl:"<textarea><\/textarea>",addListeners:function(){var n=this;n.parent.addListeners.call(n);n.single&&n.buttons!=="no"&&n.autosubmit()},autosubmit:function(){var n=this;n.inputEl.bind("keydown",function(t){(t.ctrlKey||t.metaKey)&&t.keyCode===13&&n.scope.$apply(function(){n.scope.$form.$submit()})})}})}]);angular.module("xeditable").factory("editableController",["$q","editableUtils",function(n,t){function i(n,i,r,u,f,e,o,s,h){var l,a,c=this;c.scope=n;c.elem=r;c.attrs=i;c.inputEl=null;c.editorEl=null;c.single=!0;c.error="";c.theme=f[e.theme]||f["default"];c.parent={};c.inputTpl="";c.directiveName="";c.useCopy=!1;c.single=null;c.buttons="right";c.init=function(t){if(c.single=t,c.name=i.eName||i[c.directiveName],i[c.directiveName])l=u(i[c.directiveName]);else throw"You should provide value for `"+c.directiveName+"` in editable element!";c.buttons=c.single?c.attrs.buttons||e.buttons:"no";i.eName&&c.scope.$watch("$data",function(n){c.scope.$form.$data[i.eName]=n});i.onshow&&(c.onshow=function(){return c.catchError(u(i.onshow)(n))});i.onhide&&(c.onhide=function(){return u(i.onhide)(n)});i.oncancel&&(c.oncancel=function(){return u(i.oncancel)(n)});i.onbeforesave&&(c.onbeforesave=function(){return c.catchError(u(i.onbeforesave)(n))});i.onaftersave&&(c.onaftersave=function(){return c.catchError(u(i.onaftersave)(n))});n.$parent.$watch(i[c.directiveName],function(){c.handleEmpty()})};c.render=function(){var n=c.theme,u,r,f,o;c.inputEl=angular.element(c.inputTpl);c.controlsEl=angular.element(n.controlsTpl);c.controlsEl.append(c.inputEl);c.buttons!=="no"&&(c.buttonsEl=angular.element(n.buttonsTpl),c.submitEl=angular.element(n.submitTpl),c.cancelEl=angular.element(n.cancelTpl),c.buttonsEl.append(c.submitEl).append(c.cancelEl),c.controlsEl.append(c.buttonsEl),c.inputEl.addClass("editable-has-buttons"));c.errorEl=angular.element(n.errorTpl);c.controlsEl.append(c.errorEl);c.editorEl=angular.element(c.single?n.formTpl:n.noformTpl);c.editorEl.append(c.controlsEl);for(u in i.$attr)if(!(u.length<=1)){if(r=!1,f=u.substring(1,2),u.substring(0,1)==="e"&&f===f.toUpperCase())r=u.substring(1);else continue;r!=="Form"&&r!=="NgSubmit"&&(r=r.substring(0,1).toLowerCase()+t.camelToDash(r.substring(1)),o=i[u]===""?r:i[u],c.inputEl.attr(r,o))}c.inputEl.addClass("editable-input");c.inputEl.attr("ng-model","$data");c.editorEl.addClass(t.camelToDash(c.directiveName));c.single&&(c.editorEl.attr("editable-form","$form"),c.editorEl.attr("blur",c.attrs.blur||(c.buttons==="no"?"cancel":e.blurElem)));angular.isFunction(n.postrender)&&n.postrender.call(c)};c.setLocalValue=function(){c.scope.$data=c.useCopy?angular.copy(l(n.$parent)):l(n.$parent)};c.show=function(){return c.setLocalValue(),c.render(),r.after(c.editorEl),s(c.editorEl)(n),c.addListeners(),r.addClass("editable-hide"),c.onshow()};c.hide=function(){return c.editorEl.remove(),r.removeClass("editable-hide"),c.onhide()};c.cancel=function(){c.oncancel()};c.addListeners=function(){c.inputEl.bind("keyup",function(n){if(c.single)switch(n.keyCode){case 27:c.scope.$apply(function(){c.scope.$form.$cancel()})}});c.single&&c.buttons==="no"&&c.autosubmit();c.editorEl.bind("click",function(n){n.which===1&&c.scope.$form.$visible&&(c.scope.$form._clicked=!0)})};c.setWaiting=function(n){n?(a=!c.inputEl.attr("disabled")&&!c.inputEl.attr("ng-disabled")&&!c.inputEl.attr("ng-enabled"),a&&(c.inputEl.attr("disabled","disabled"),c.buttonsEl&&c.buttonsEl.find("button").attr("disabled","disabled"))):a&&(c.inputEl.removeAttr("disabled"),c.buttonsEl&&c.buttonsEl.find("button").removeAttr("disabled"))};c.activate=function(){setTimeout(function(){var n=c.inputEl[0];e.activate==="focus"&&n.focus&&n.focus();e.activate==="select"&&n.select&&n.select()},0)};c.setError=function(t){angular.isObject(t)||(n.$error=t,c.error=t)};c.catchError=function(n,t){return angular.isObject(n)&&t!==!0?h.when(n).then(angular.bind(this,function(n){this.catchError(n,!0)}),angular.bind(this,function(n){this.catchError(n,!0)})):t&&angular.isObject(n)&&n.status&&n.status!==200&&n.data&&angular.isString(n.data)?(this.setError(n.data),n=n.data):angular.isString(n)&&this.setError(n),n};c.save=function(){l.assign(n.$parent,angular.copy(c.scope.$data))};c.handleEmpty=function(){var t=l(n.$parent),i=t===null||t===undefined||t===""||angular.isArray(t)&&t.length===0;r.toggleClass("editable-empty",i)};c.autosubmit=angular.noop;c.onshow=angular.noop;c.onhide=angular.noop;c.oncancel=angular.noop;c.onbeforesave=angular.noop;c.onaftersave=angular.noop}return i.$inject=["$scope","$attrs","$element","$parse","editableThemes","editableOptions","$rootScope","$compile","$q"],i}]);angular.module("xeditable").factory("editableDirectiveFactory",["$parse","$compile","editableThemes","$rootScope","$document","editableController","editableFormController",function(n,t,i,r,u,f,e){return function(t){return{restrict:"A",scope:!0,require:[t.directiveName,"?^form"],controller:f,link:function(i,f,o,s){var h=s[0],c,l=!1,v,a;if(s[1])c=s[1],l=!0;else if(o.eForm)if(v=n(o.eForm)(i),v)c=v,l=!0;else for(a=0;a<u[0].forms.length;a++)if(u[0].forms[a].name===o.eForm){c=null;l=!0;break}if(angular.forEach(t,function(n,t){h[t]!==undefined&&(h.parent[t]=h[t])}),angular.extend(h,t),h.init(!l),i.$editable=h,f.addClass("editable"),l)if(c){if(i.$form=c,!i.$form.$addEditable)throw"Form with editable elements should have `editable-form` attribute.";i.$form.$addEditable(h)}else r.$$editableBuffer=r.$$editableBuffer||{},r.$$editableBuffer[o.eForm]=r.$$editableBuffer[o.eForm]||[],r.$$editableBuffer[o.eForm].push(h),i.$form=null;else i.$form=e(),i.$form.$addEditable(h),o.eForm&&(i.$parent[o.eForm]=i.$form),o.eForm||(f.addClass("editable-click"),f.bind("click",function(n){n.preventDefault();n.editable=h;i.$apply(function(){i.$form.$show()})}))}}}}]);angular.module("xeditable").factory("editableFormController",["$parse","$document","$rootScope","editablePromiseCollection","editableUtils",function(n,t,i,r,u){var f=[],e;return t.bind("click",function(n){var r,u,t;if(n.which===1){for(r=[],u=[],t=0;t<f.length;t++){if(f[t]._clicked){f[t]._clicked=!1;continue}f[t].$waiting||(f[t]._blur==="cancel"&&r.push(f[t]),f[t]._blur==="submit"&&u.push(f[t]))}(r.length||u.length)&&i.$apply(function(){angular.forEach(r,function(n){n.$cancel()});angular.forEach(u,function(n){n.$submit()})})}}),e={$addEditable:function(n){this.$editables.push(n);n.elem.bind("$destroy",angular.bind(this,this.$removeEditable,n));n.scope.$form||(n.scope.$form=this);this.$visible&&n.catchError(n.show())},$removeEditable:function(n){for(var t=0;t<this.$editables.length;t++)if(this.$editables[t]===n){this.$editables.splice(t,1);return}},$show:function(){if(!this.$visible){this.$visible=!0;var n=r();n.when(this.$onshow());this.$setError(null,"");angular.forEach(this.$editables,function(t){n.when(t.show())});n.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,this.$activate),onFalse:angular.bind(this,this.$activate),onString:angular.bind(this,this.$activate)});setTimeout(angular.bind(this,function(){this._clicked=!1;u.indexOf(f,this)===-1&&f.push(this)}),0)}},$activate:function(n){var t;if(this.$editables.length){if(angular.isString(n))for(t=0;t<this.$editables.length;t++)if(this.$editables[t].name===n){this.$editables[t].activate();return}for(t=0;t<this.$editables.length;t++)if(this.$editables[t].error){this.$editables[t].activate();return}this.$editables[0].activate()}},$hide:function(){this.$visible&&(this.$visible=!1,this.$onhide(),angular.forEach(this.$editables,function(n){n.hide()}),u.arrayRemove(f,this))},$cancel:function(){this.$visible&&(this.$oncancel(),angular.forEach(this.$editables,function(n){n.cancel()}),this.$hide())},$setWaiting:function(n){this.$waiting=!!n;angular.forEach(this.$editables,function(t){t.setWaiting(!!n)})},$setError:function(n,t){angular.forEach(this.$editables,function(i){n&&i.name!==n||i.setError(t)})},$submit:function(){function t(n){var t=r();t.when(this.$onbeforesave());t.then({onWait:angular.bind(this,this.$setWaiting),onTrue:n?angular.bind(this,this.$save):angular.bind(this,this.$hide),onFalse:angular.bind(this,this.$hide),onString:angular.bind(this,this.$activate)})}if(!this.$waiting){this.$setError(null,"");var n=r();angular.forEach(this.$editables,function(t){n.when(t.onbeforesave())});n.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,t,!0),onFalse:angular.bind(this,t,!1),onString:angular.bind(this,this.$activate)})}},$save:function(){angular.forEach(this.$editables,function(n){n.save()});var n=r();n.when(this.$onaftersave());angular.forEach(this.$editables,function(t){n.when(t.onaftersave())});n.then({onWait:angular.bind(this,this.$setWaiting),onTrue:angular.bind(this,this.$hide),onFalse:angular.bind(this,this.$hide),onString:angular.bind(this,this.$activate)})},$onshow:angular.noop,$oncancel:angular.noop,$onhide:angular.noop,$onbeforesave:angular.noop,$onaftersave:angular.noop},function(){return angular.extend({$editables:[],$visible:!1,$waiting:!1,$data:{},_clicked:!1,_blur:null},e)}}]);angular.module("xeditable").directive("editableForm",["$rootScope","$parse","editableFormController","editableOptions",function(n,t,i,r){return{restrict:"A",require:["form"],compile:function(){return{pre:function(t,r,u,f){var h=f[0],e,o,s;u.editableForm?t[u.editableForm]&&t[u.editableForm].$show?(e=t[u.editableForm],angular.extend(h,e)):(e=i(),t[u.editableForm]=e,angular.extend(e,h)):(e=i(),angular.extend(h,e));o=n.$$editableBuffer;s=h.$name;s&&o&&o[s]&&(angular.forEach(o[s],function(n){e.$addEditable(n)}),delete o[s])},post:function(n,i,u,f){var e;e=u.editableForm&&n[u.editableForm]&&n[u.editableForm].$show?n[u.editableForm]:f[0];u.onshow&&(e.$onshow=angular.bind(e,t(u.onshow),n));u.onhide&&(e.$onhide=angular.bind(e,t(u.onhide),n));u.oncancel&&(e.$oncancel=angular.bind(e,t(u.oncancel),n));u.shown&&t(u.shown)(n)&&e.$show();e._blur=u.blur||r.blurForm;u.ngSubmit||u.submit||(u.onbeforesave&&(e.$onbeforesave=function(){return t(u.onbeforesave)(n,{$data:e.$data})}),u.onaftersave&&(e.$onaftersave=function(){return t(u.onaftersave)(n,{$data:e.$data})}),i.bind("submit",function(t){t.preventDefault();n.$apply(function(){e.$submit()})}));i.bind("click",function(n){n.which===1&&e.$visible&&(e._clicked=!0)})}}}}}]);angular.module("xeditable").factory("editablePromiseCollection",["$q",function(n){function t(){return{promises:[],hasFalse:!1,hasString:!1,when:function(t,i){if(t===!1)this.hasFalse=!0;else if(!i&&angular.isObject(t))this.promises.push(n.when(t));else if(angular.isString(t))this.hasString=!0;else return},then:function(t){function f(){i.hasString||i.hasFalse?!i.hasString&&i.hasFalse?o():u():e()}t=t||{};var e=t.onTrue||angular.noop,o=t.onFalse||angular.noop,u=t.onString||angular.noop,r=t.onWait||angular.noop,i=this;this.promises.length?(r(!0),n.all(this.promises).then(function(n){r(!1);angular.forEach(n,function(n){i.when(n,!0)});f()},function(){r(!1);u()})):f()}}}return t}]);angular.module("xeditable").factory("editableUtils",[function(){return{indexOf:function(n,t){if(n.indexOf)return n.indexOf(t);for(var i=0;i<n.length;i++)if(t===n[i])return i;return-1},arrayRemove:function(n,t){var i=this.indexOf(n,t);return i>=0&&n.splice(i,1),t},camelToDash:function(n){return n.replace(/[A-Z]/g,function(n,t){return(t?"-":"")+n.toLowerCase()})},dashToCamel:function(n){return n.replace(/([\:\-\_]+(.))/g,function(n,t,i,r){return r?i.toUpperCase():i}).replace(/^moz([A-Z])/,"Moz$1")}}}]);angular.module("xeditable").factory("editableNgOptionsParser",[function(){function t(t){var i;if(!(i=t.match(n)))throw"ng-options parse error";var s=i[2]||i[1],r=i[4]||i[6],f=i[5],l=i[3]||"",h=i[2]?i[1]:r,e=i[7],o=i[8],c=o?i[8]:null,u;return f===undefined?(u=r+" in "+e,o!==undefined&&(u+=" track by "+c)):u="("+f+", "+r+") in "+e,{ngRepeat:u,locals:{valueName:r,keyName:f,valueFn:h,displayFn:s}}}var n=/^\s*(.*?)(?:\s+as\s+(.*?))?(?:\s+group\s+by\s+(.*))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+(.*?)(?:\s+track\s+by\s+(.*?))?$/;return t}]);angular.module("xeditable").factory("editableThemes",function(){return{"default":{formTpl:'<form class="editable-wrap"><\/form>',noformTpl:'<span class="editable-wrap"><\/span>',controlsTpl:'<span class="editable-controls"><\/span>',inputTpl:"",errorTpl:'<div class="editable-error" ng-show="$error" ng-bind="$error"><\/div>',buttonsTpl:'<span class="editable-buttons"><\/span>',submitTpl:'<button type="submit">save<\/button>',cancelTpl:'<button type="button" ng-click="$form.$cancel()">cancel<\/button>'},bs2:{formTpl:'<form class="form-inline editable-wrap" role="form"><\/form>',noformTpl:'<span class="editable-wrap"><\/span>',controlsTpl:'<div class="editable-controls controls control-group" ng-class="{\'error\': $error}"><\/div>',inputTpl:"",errorTpl:'<div class="editable-error help-block" ng-show="$error" ng-bind="$error"><\/div>',buttonsTpl:'<span class="editable-buttons"><\/span>',submitTpl:'<button type="submit" class="btn btn-primary"><span class="icon-ok icon-white"><\/span><\/button>',cancelTpl:'<button type="button" class="btn" ng-click="$form.$cancel()"><span class="icon-remove"><\/span><\/button>'},bs3:{formTpl:'<form class="form-inline editable-wrap" role="form"><\/form>',noformTpl:'<span class="editable-wrap"><\/span>',controlsTpl:'<div class="editable-controls form-group" ng-class="{\'has-error\': $error}"><\/div>',inputTpl:"",errorTpl:'<div class="editable-error help-block" ng-show="$error" ng-bind="$error"><\/div>',buttonsTpl:'<span class="editable-buttons"><\/span>',submitTpl:'<button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-ok"><\/span><\/button>',cancelTpl:'<button type="button" class="btn btn-default" ng-click="$form.$cancel()"><span class="glyphicon glyphicon-remove"><\/span><\/button>',buttonsClass:"",inputClass:"",postrender:function(){switch(this.directiveName){case"editableText":case"editableSelect":case"editableTextarea":case"editableEmail":case"editableTel":case"editableNumber":case"editableUrl":case"editableSearch":case"editableDate":case"editableDatetime":case"editableTime":case"editableMonth":case"editableWeek":if(this.inputEl.addClass("form-control"),this.theme.inputClass){if(this.inputEl.attr("multiple")&&(this.theme.inputClass==="input-sm"||this.theme.inputClass==="input-lg"))break;this.inputEl.addClass(this.theme.inputClass)}}this.buttonsEl&&this.theme.buttonsClass&&this.buttonsEl.find("button").addClass(this.theme.buttonsClass)}}}});
//# sourceMappingURL=xeditable.min.js.map
